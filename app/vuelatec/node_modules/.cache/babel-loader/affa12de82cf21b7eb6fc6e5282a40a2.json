{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusfc\\\\Documents\\\\GitHub\\\\TI4601-vuelaTEC\\\\app\\\\vuelatec\\\\src\\\\components\\\\Administrator\\\\Airport\\\\index.js\";\nimport React from 'react';\nimport { Button, Col, Container, Form, Row, Spinner, Tab, Tabs } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/*Tabs*/\n\nimport DeleteAirport from './Delete';\nimport ReadAirport from './Read';\nimport UpdateAirport from './Update';\n\nclass Airport extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.componentDidMount = async () => {\n      this._isMounted = true;\n      const countries = await fetch('https://raw.githubusercontent.com/shivammathur/countrycity/master/data/geo.json', {\n        method: 'GET'\n      }).then(response => response.json()).then(responseJson => {\n        if (responseJson !== '' && this._isMounted) {\n          return Object.keys(responseJson).sort();\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n      fetch('https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/countries.json', {\n        method: \"GET\"\n      }).then(response => response.json()).then(responseJson => {\n        if (responseJson !== '' && this._isMounted) {\n          const tempCountries = [];\n          responseJson.forEach(element => {\n            if (countries.includes(element.name)) {\n              tempCountries.push(element);\n            }\n          });\n          this.setState({\n            listCountries: tempCountries\n          });\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this._handleChangeSelectCountry = async event => {\n      const item = await JSON.parse(event.target.value.toString());\n      this.setState({\n        country: item[\"country\"],\n        countryCode: item[\"code\"],\n        isLoadCities: true\n      });\n      fetch('https://raw.githubusercontent.com/shivammathur/countrycity/master/data/geo.json', {\n        method: 'GET'\n      }).then(response => response.json()).then(responseJson => {\n        if (responseJson !== '') {\n          this.setState({\n            listCities: responseJson[this.state.country].sort(),\n            isLoadCities: false\n          });\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this._submitData = async () => {\n      if (this.state.name === '' || this.state.code === '') {\n        window.confirm(\"Debe Ingresar un nombre y código para el aeropuerto.\");\n      } else if (this.state.country === '' || this.state.city === '') {\n        window.confirm(\"Debe ingresar un país y ciuidad.\");\n      } else if (this.state.number === '' || this.state.webPage === '') {\n        window.confirm(\"Debe ingresar un numero y sito web validos.\");\n      } else {\n        let data = {\n          _id: this.state.code,\n          name: this.state.name,\n          city: this.state.city,\n          country: this.state.country,\n          number: \"(+\".concat(this.state.countryCode, \") \").concat(this.state.number),\n          webPage: this.state.webPage\n        };\n        await fetch('http://localhost:3000/admin/newAirport/', {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => response.json()).then(responseJson => {\n          if (responseJson.name === this.state.name) {\n            this.setState({\n              name: '',\n              city: '',\n              country: '',\n              number: '',\n              webPage: '',\n              code: ''\n            });\n            window.confirm(\"Se agregado correctamente el nuevo aeropuerto.\");\n          }\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    };\n\n    this.state = {\n      city: '',\n      code: '',\n      country: '',\n      countryCode: '',\n      listCities: [],\n      listCountries: [],\n      name: '',\n      number: '',\n      webPage: ''\n    };\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  _handleChangeCode(event) {\n    this.setState({\n      code: event.target.value\n    });\n  }\n\n  _handleChangeName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  _handleChangeNumber(event) {\n    this.setState({\n      number: event.target.value\n    });\n  }\n\n  _handleChangeWebPage(event) {\n    this.setState({\n      webPage: event.target.value\n    });\n  }\n\n  _handleChangeSelectCity(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  render() {\n    const spinnerCities = this.state.isLoadCities ? React.createElement(Spinner, {\n      animation: \"grow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }) : null;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"create\",\n      id: \"uncontrolled-tab-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"create\",\n      title: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Agregar Aeropuerto\")), React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: true,\n      lg: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      style: {\n        marginTop: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Nombre\"), React.createElement(Form.Control, {\n      type: \"string\",\n      placeholder: \"Nombre\",\n      value: this.state.name,\n      onChange: this._handleChangeName.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridLastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"C\\xF3digo\"), React.createElement(Form.Control, {\n      type: \"string\",\n      placeholder: \"C\\xF3digo\",\n      value: this.state.code,\n      onChange: this._handleChangeCode.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      style: {\n        marginTop: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"ControlSelectCountry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Pa\\xEDs\"), React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: 'DEFAULT',\n      onChange: this._handleChangeSelectCountry.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: 'DEFAULT',\n      disabled: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Seleccionar un pa\\xEDs\"), this.state.listCountries.map((item, index) => React.createElement(\"option\", {\n      value: '{\"country\":\"' + item.name + '\", \"code\":\"' + item.phone_code + '\"}',\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, item.name)))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"ControlSelectCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Ciudad \", spinnerCities), React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: 'DEFAULT',\n      value: this.state.address,\n      onChange: this._handleChangeSelectCity.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: 'DEFAULT',\n      disabled: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Seleccionar una ciudad\"), this.state.listCities.map((item, key) => React.createElement(\"option\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, item))))), React.createElement(Form.Row, {\n      style: {\n        marginTop: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"N\\xFAmero de Telef\\xF3no (+\", this.state.countryCode, \")\"), React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: \"Numero telefonico\",\n      value: this.state.number,\n      onChange: this._handleChangeNumber.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      style: {\n        marginTop: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"URL de sitio web\"), React.createElement(Form.Control, {\n      type: \"string\",\n      placeholder: \"https://www.airport.com\",\n      value: this.state.webPage,\n      onChange: this._handleChangeWebPage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: true,\n      lg: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      style: {\n        margin: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      size: \"lg\",\n      onClick: this._submitData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Confirmar\"))), React.createElement(Tab, {\n      eventKey: \"read\",\n      title: \"R\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(ReadAirport, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"update\",\n      title: \"U\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(UpdateAirport, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      eventKey: \"delete\",\n      title: \"D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(DeleteAirport, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Airport;","map":{"version":3,"sources":["C:/Users/gusfc/Documents/GitHub/TI4601-vuelaTEC/app/vuelatec/src/components/Administrator/Airport/index.js"],"names":["React","Button","Col","Container","Form","Row","Spinner","Tab","Tabs","DeleteAirport","ReadAirport","UpdateAirport","Airport","Component","constructor","props","_isMounted","componentDidMount","countries","fetch","method","then","response","json","responseJson","Object","keys","sort","catch","error","console","tempCountries","forEach","element","includes","name","push","setState","listCountries","_handleChangeSelectCountry","event","item","JSON","parse","target","value","toString","country","countryCode","isLoadCities","listCities","state","_submitData","code","window","confirm","city","number","webPage","data","_id","body","stringify","headers","componentWillUnmount","_handleChangeCode","_handleChangeName","_handleChangeNumber","_handleChangeWebPage","_handleChangeSelectCity","render","spinnerCities","margin","marginTop","bind","map","index","phone_code","address","key"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Col, Container, Form, Row, Spinner, Tab, Tabs } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/*Tabs*/\r\nimport DeleteAirport from './Delete';\r\nimport ReadAirport from './Read';\r\nimport UpdateAirport from './Update';\r\n\r\nclass Airport extends React.Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: '',\r\n      code: '',\r\n      country: '',\r\n      countryCode: '',\r\n      listCities: [],\r\n      listCountries: [],\r\n      name: '',\r\n      number: '',\r\n      webPage: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this._isMounted = true;\r\n    const countries = await fetch('https://raw.githubusercontent.com/shivammathur/countrycity/master/data/geo.json',\r\n      {\r\n        method: 'GET'\r\n      })\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        if (responseJson !== '' && this._isMounted) {\r\n          return Object.keys(responseJson).sort()\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n    fetch('https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/countries.json',\r\n      {\r\n        method: \"GET\"\r\n      })\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        if (responseJson !== '' && this._isMounted) {\r\n          const tempCountries = []\r\n          responseJson.forEach(element => {\r\n            if (countries.includes(element.name)) {\r\n              tempCountries.push(element);\r\n            }\r\n          })\r\n          this.setState({\r\n            listCountries: tempCountries\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  _handleChangeCode(event) {\r\n    this.setState({ code: event.target.value })\r\n  }\r\n\r\n  _handleChangeName(event) {\r\n    this.setState({ name: event.target.value })\r\n  }\r\n\r\n  _handleChangeNumber(event) {\r\n    this.setState({ number: event.target.value })\r\n  }\r\n\r\n  _handleChangeWebPage(event) {\r\n    this.setState({ webPage: event.target.value })\r\n  }\r\n\r\n  _handleChangeSelectCity(event) {\r\n    this.setState({ city: event.target.value })\r\n  }\r\n\r\n  _handleChangeSelectCountry = async (event) => {\r\n    const item = await JSON.parse(event.target.value.toString())\r\n    this.setState({\r\n      country: item[\"country\"],\r\n      countryCode: item[\"code\"],\r\n      isLoadCities: true\r\n    })\r\n\r\n    fetch('https://raw.githubusercontent.com/shivammathur/countrycity/master/data/geo.json',\r\n      {\r\n        method: 'GET'\r\n      })\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        if (responseJson !== '') {\r\n          this.setState({\r\n            listCities: responseJson[this.state.country].sort(),\r\n            isLoadCities: false\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  _submitData = async () => {\r\n    if (this.state.name === '' || this.state.code === '') {\r\n      window.confirm(\"Debe Ingresar un nombre y código para el aeropuerto.\")\r\n    }\r\n    else if (this.state.country === '' || this.state.city === '') {\r\n      window.confirm(\"Debe ingresar un país y ciuidad.\")\r\n    }\r\n    else if (this.state.number === '' || this.state.webPage === '') {\r\n      window.confirm(\"Debe ingresar un numero y sito web validos.\")\r\n    }\r\n    else {\r\n      let data = {\r\n        _id: this.state.code,\r\n        name: this.state.name,\r\n        city: this.state.city,\r\n        country: this.state.country,\r\n        number: `(+${this.state.countryCode}) ${this.state.number}`,\r\n        webPage: this.state.webPage\r\n      }\r\n      await fetch('http://localhost:3000/admin/newAirport/',\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseJson => {\r\n          if (responseJson.name === this.state.name) {\r\n            this.setState({ name: '', city: '', country: '', number: '', webPage: '', code: '' })\r\n            window.confirm(\"Se agregado correctamente el nuevo aeropuerto.\")\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const spinnerCities = this.state.isLoadCities ?\r\n      (\r\n        <Spinner animation=\"grow\" />\r\n      ) : null;\r\n    return (\r\n      <Container>\r\n        <Tabs defaultActiveKey=\"create\" id=\"uncontrolled-tab-example\">\r\n          <Tab eventKey=\"create\" title=\"C\">\r\n            <div style={{ margin: '2%' }}>\r\n              <h3 align='center'>Agregar Aeropuerto</h3>\r\n            </div>\r\n            <Row className='justify-content-md-center'>\r\n              <Col xs lg='2'></Col>\r\n              <Col md='auto'>\r\n                <Form>\r\n                  <Form.Row style={{ marginTop: '2%' }}>\r\n                    <Form.Group as={Col} controlId='formGridName'>\r\n                      <Form.Label>Nombre</Form.Label>\r\n                      <Form.Control type='string' placeholder='Nombre' value={this.state.name} onChange={this._handleChangeName.bind(this)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId='formGridLastname'>\r\n                      <Form.Label>Código</Form.Label>\r\n                      <Form.Control type='string' placeholder='Código' value={this.state.code} onChange={this._handleChangeCode.bind(this)} />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row style={{ marginTop: '2%' }}>\r\n                    <Form.Group as={Col} controlId=\"ControlSelectCountry\">\r\n                      <Form.Label>País</Form.Label>\r\n                      <Form.Control as=\"select\" defaultValue={'DEFAULT'} onChange={this._handleChangeSelectCountry.bind(this)}>\r\n                        <option value={'DEFAULT'} disabled hidden>Seleccionar un país</option>\r\n                        {this.state.listCountries.map((item, index) => (\r\n                          <option value={'{\"country\":\"' + item.name + '\", \"code\":\"' + item.phone_code + '\"}'} key={index}>{item.name}</option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"ControlSelectCity\">\r\n                      <Form.Label>Ciudad {spinnerCities}</Form.Label>\r\n                      <Form.Control as=\"select\" defaultValue={'DEFAULT'} value={this.state.address} onChange={this._handleChangeSelectCity.bind(this)}>\r\n                        <option value={'DEFAULT'} disabled hidden>Seleccionar una ciudad</option>\r\n                        {this.state.listCities.map((item, key) => (\r\n                          <option key={key}>{item}</option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row style={{ marginTop: '2%' }}>\r\n                    <Form.Group as={Col} controlId='formGridNumber'>\r\n                      <Form.Label>Número de Telefóno (+{this.state.countryCode})</Form.Label>\r\n                      <Form.Control type='number' placeholder='Numero telefonico' value={this.state.number} onChange={this._handleChangeNumber.bind(this)} />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row style={{ marginTop: '2%' }}>\r\n                    <Form.Group as={Col} controlId='formGrid'>\r\n                      <Form.Label>URL de sitio web</Form.Label>\r\n                      <Form.Control type='string' placeholder='https://www.airport.com' value={this.state.webPage} onChange={this._handleChangeWebPage.bind(this)} />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                </Form>\r\n              </Col>\r\n              <Col xs lg='2'></Col>\r\n            </Row>\r\n\r\n            <Row className='justify-content-md-center' style={{ margin: '3%' }}>\r\n              <Button\r\n                variant='primary'\r\n                size='lg'\r\n                onClick={this._submitData}>\r\n                Confirmar\r\n              </Button>\r\n            </Row>\r\n          </Tab>\r\n          <Tab eventKey=\"read\" title=\"R\">\r\n            <ReadAirport />\r\n          </Tab>\r\n          <Tab eventKey=\"update\" title=\"U\" >\r\n            <UpdateAirport />\r\n          </Tab>\r\n          <Tab eventKey=\"delete\" title=\"D\" >\r\n            <DeleteAirport />\r\n          </Tab>\r\n        </Tabs>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Airport;\r\n"]},"metadata":{},"sourceType":"module"}